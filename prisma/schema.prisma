generator client {
  provider             = "prisma-client-py"
  interface            = "sync"
  recursive_type_depth = 5
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int        @id @default(autoincrement())
  username           String     @unique
  phone              String
  current_chapter_id Int?
  current_chapter    Chapter?   @relation(fields: [current_chapter_id], references: [id])
  finished_trainings Training[]
  evals              Eval[]
}

model Training {
  id           Int       @id @default(autoincrement())
  name         String
  field        String
  description  String
  chapters     Chapter[]
  performed_by User[]
}

model Chapter {
  id             Int      @id @default(autoincrement())
  chapter_number Int
  name           String
  content        String   @db.LongText
  question       String   @db.LongText
  answers        Json
  training_id    Int
  training       Training @relation(fields: [training_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  users          User[]
  evals          Eval[]
}

model Eval {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chapter_id Int
  chapter    Chapter  @relation(fields: [chapter_id], references: [id], onDelete: Restrict, onUpdate: Restrict)
  score      Int
  timestamp  DateTime @default(now())
}
