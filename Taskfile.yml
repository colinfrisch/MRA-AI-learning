version: '3'

vars:
  MYSQL_PORT: "3306"
  MYSQL_USER: "local_user"
  MYSQL_PASSWORD: "local_password"
  MYSQL_DATABASE: "mra_db"
  MYSQL_CONTAINER: "mra_db"



includes:
  backend:
    taskfile: ./backend/Taskfile.yml
    dir: ./backend
  frontend:
    taskfile: ./frontend/Taskfile.yml
    dir: ./frontend

tasks:
  init:
    desc: "Initialize the project"
    deps:
      - backend:init
      - frontend:init
    cmds:
      - echo "Initializing project..."

  clean:
    desc: "Remove generated files but keep poetry.lock"
    deps:
      - backend:clean
      - frontend:clean

  run-frontend:
    desc: "Run the React frontend"
    dir: ./src/frontend
    cmds:
      - npm start

  run:
    desc: "Run both frontend and backend"
    cmds:
      - task: run-database
    deps:
      - backend:run
      - frontend:run

  test:
    desc: "Run tests with unittest"
    deps:
      - backend:test
      - frontend:test

  run-database:
    desc: "Start MySQL database with Docker Compose"
    dir: ./compose
    cmds:
      - docker compose up -d --wait

  stop-database:
    desc: "Stop and remove MySQL database container"
    dir: ./compose
    cmds:
      - docker compose stop

  mysql-prompt:
    desc: "Open MySQL prompt inside Docker container"
    cmds:
      - docker exec -it {{.MYSQL_CONTAINER}} mysql -h127.0.0.1 -u{{.MYSQL_USER}} -p{{.MYSQL_PASSWORD}} {{.MYSQL_DATABASE}}

  build:
    desc: "Build both frontend and backend projects"
    deps:
      - backend:build
      - frontend:build

  lint:
    desc: "Lint both frontend and backend codebases"
    deps:
      - backend:lint
      - frontend:lint

  deploy:
    desc: "Deploy the full-stack application"
    cmds:
      - echo "Deploying application..."
      - echo "Ensure deployment scripts are configured."
